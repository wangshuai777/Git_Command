<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iot.ssm.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.iot.ssm.po.Role" >
    <id column="roleid" property="roleid" jdbcType="BIGINT" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    roleid, role, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iot.ssm.po.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_roles
    where roleid = #{roleid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_roles
    where roleid = #{roleid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iot.ssm.po.RoleExample" >
    delete from sys_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iot.ssm.po.Role" >
    insert into sys_roles (roleid, role, description
      )
    values (#{roleid,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iot.ssm.po.Role" >
    insert into sys_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid,jdbcType=BIGINT},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iot.ssm.po.RoleExample" resultType="java.lang.Integer" >
    select count(*) from sys_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_roles
    <set >
      <if test="record.roleid != null" >
        roleid = #{record.roleid,jdbcType=BIGINT},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_roles
    set roleid = #{record.roleid,jdbcType=BIGINT},
      role = #{record.role,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iot.ssm.po.Role" >
    update sys_roles
    <set >
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where roleid = #{roleid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iot.ssm.po.Role" >
    update sys_roles
    set role = #{role,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where roleid = #{roleid,jdbcType=BIGINT}
  </update>
  <select id="selectByExamplePage" resultMap="BaseResultMap" parameterType="com.iot.ssm.po.RoleExample" >
    select 
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
     from sys_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause"/> 
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null and page >=0" >
      limit ${page} , ${pageSize}
    </if>
  </select>
  <update id="updateBySelectiveBatch" >
    <foreach collection="list" item="item" index="index" separator=";" >
      <if test="item.roleid != null" >
        update sys_roles
        <set >
          <if test="item.role != null" >
            role = #{item.role,jdbcType=VARCHAR},
          </if>
          <if test="item.description != null" >
            description = #{item.description,jdbcType=VARCHAR},
          </if>
        </set>
        where roleid = #{item.roleid,jdbcType=BIGINT}
      </if>
    </foreach>
  </update>
  <update id="updateBatch" >
    <foreach collection="list" item="item" index="index" separator=";" >
      <if test="item.roleid != null" >
        update sys_roles
        set role = #{item.role,jdbcType=VARCHAR},
          description = #{item.description,jdbcType=VARCHAR}
        where roleid = #{item.roleid,jdbcType=BIGINT}
      </if>
    </foreach>
  </update>
  <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id" >
    <foreach collection="list" item="item" index="index" separator=";" >
      insert into sys_roles (roleid, role, description
        )
      values (#{item.roleid,jdbcType=BIGINT}, #{item.role,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
</mapper>